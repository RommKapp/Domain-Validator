version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: edv_db
      POSTGRES_USER: edv_user
      POSTGRES_PASSWORD: edv_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U edv_user -d edv_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - edv_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - edv_network

  # Email Domain Validator App
  edv_app:
    build: .
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://edv_user:edv_password@postgres:5432/edv_db
      REDIS_URL: redis://redis:6379
      ENVIRONMENT: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./PUBLIC_EMAIL_DOMAINS.csv:/app/PUBLIC_EMAIL_DOMAINS.csv:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - edv_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
    depends_on:
      - edv_app
    networks:
      - edv_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  edv_network:
    driver: bridge